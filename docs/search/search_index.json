{
    "docs": [
        {
            "location": "/",
            "text": "Overview",
            "title": "Introduction"
        },
        {
            "location": "/#overview",
            "text": "",
            "title": "Overview"
        },
        {
            "location": "/installation/",
            "text": "Pyneal is built and tested using \nPython 3.6\n. Download from \nhttps://www.python.org/downloads/\n or via a distribution like \nAnaconda\n\n\nPyneal requires additional libraries beyond the standard library. Instructions below use \npip\n to install these libraries. Verify that you have \npip\n installed:\n\n\n\n\nwhich pip\n\n\n\n\nIf not, download and install pip from \nhttps://pip.pypa.io/en/stable/installing/\n\n\nOverview\n\n\nThe software tool is broken into two separate components: \nPyneal Scanner\n and \nPyneal\n. When first downloaded, \nPyneal Scanner\n is contained in a separate directory within the \nPyneal\n directory\n\n\n\n\n\n\nPyneal Scanner\n: Accesses incoming data, modifies it to match a standardized format, and then sends the data out, one 3D volume at a time, to \nPyneal\n\n\n\n\n\n\nPyneal\n: Listens for incoming 3D volumes from \nPyneal Scanner\n, runs whatever analyses\nyou have specified, and hosts the results on a server, which other downstream components (e.g. an experimental task) can make requests to\n\n\n\n\n\n\nThis design allows the software to easily accommodate the various directory structures and  data formats that are found on different scanner models at different institutions around the world.\n\n\nHowever, this feature also means that the specific installation instructions can vary by computing environments.\n\n\nDefinitions Used\n\n\nFor the purposes of these instructions, we'll refer to computers by their \nfunctional\n role:\n\n\n\n\n\n\nScanner computer\n: The computer where reconstructed images from the scanner appear. In the case of GE scanners, for instance, new slice dicom files appear in a directory on the scanner console. Siemens scanners, on the other hand, may export new images to a directory on a shared network drive. The \nscanner computer\n is simply the computer that has local access to the directory where new images appear\n\n\n\n\n\n\nAnalysis computer\n: The computer that will be running \nPyneal\n. This is the computer on which users will setup their analysis, launch \nPyneal\n, and monitor on-going scans.\n\n\n\n\n\n\nNote that in some cases, the \nsame physical computer\n can play both functional roles. For instance, when working in a Siemens environment, new images from the scanner might be exported to a shared directory that is accessible on the \nanalysis computer\n. In this case, the same machine could be playing the role of both the \nscanner computer\n and the \nanalysis computer\n.\n\n\nDownload Pyneal\n\n\nDownload the \nPyneal repository\n from GitHub, or clone to your local machine:\n\n\n\n\ngit clone https://github.com/jeffmacinnes/pyneal.git\n\n\n\n\nPyneal-Scanner\n\n\nThe \npyneal_scanner\n directory needs to be on the \nscanner computer\n. If the \nscanner computer\n is different from the \nanalysis computer\n in your environment, copy the \npyneal_scanner\n directory to the \nscanner computer\n.  \n\n\ndependencies\n\n\nThe \nscanner computer\n requires additional \npython\n libraries in order to run \nPyneal Scanner\n.\n\n\nYou can attempt to install all required libraries at once by navigating into the \npyneal_scanner\n directory and typing:\n\n\n\n\npip install -r requirements.txt\n\n\n\n\nIf that fails for any reason, you can install manually one at a time:\n\n\n\n\npip install numpy==1.13.1\n\npip install pydicom==0.9.9\n\npip install nibabel==2.1.0\n\npip install pyzmq==16.0.2\n\npip install pyyaml==3.12\n\n\n\n\nThese versions reflect the primary environment in which \nPyneal\n is tested. It is likely that other versions maintain compatibility, but use at your own risk.\n\n\nPyneal\n\n\nThe \npyneal\n directory needs to be on the \nanalysis computer\n.\n\n\ndependencies\n\n\nThe \nanalysis computer\n requires additional \npython\n libraries in order to run \nPyneal\n.\n\n\nYou can attempt to install all required libraries at once by navigating into the \npyneal\n directory and typing:\n\n\n\n\npip install -r requirements.txt\n\n\n\n\nIf that fails for any reason, you can install manually one at a time:\n\n\n\n\npip install numpy==1.13.1\n\npip install nibabel==2.1.0\n\npip install pyzmq==16.0.2\n\npip install pyyaml==3.12\n\npip install kivy==1.10.dev0\n\npip install flask==0.12.2\n\npip install flask_socketio==2.9.2\n\npip install eventlet==0.21.0  \n\n\n\n\nThese versions reflect the primary environment in which \nPyneal\n is tested. It is likely that other versions maintain compatibility, but use at your own risk.\n\n\nMisc Utilities\n\n\nPyneal\n itself does not require any additional libaries beyond what is listed above. However, there are various tools included that you may find useful during a real-time scan session. For instance, the tool \ncreateMask\n can be used to transform a standard space ROI mask to the subject's functional space, which can then be used as a mask for analysis during a real-time scan. \n\n\nIn order to use these additional tools, make sure you have installed the following:\n\n\n\n\nFSL 5.0",
            "title": "Installation"
        },
        {
            "location": "/installation/#overview",
            "text": "The software tool is broken into two separate components:  Pyneal Scanner  and  Pyneal . When first downloaded,  Pyneal Scanner  is contained in a separate directory within the  Pyneal  directory    Pyneal Scanner : Accesses incoming data, modifies it to match a standardized format, and then sends the data out, one 3D volume at a time, to  Pyneal    Pyneal : Listens for incoming 3D volumes from  Pyneal Scanner , runs whatever analyses\nyou have specified, and hosts the results on a server, which other downstream components (e.g. an experimental task) can make requests to    This design allows the software to easily accommodate the various directory structures and  data formats that are found on different scanner models at different institutions around the world.  However, this feature also means that the specific installation instructions can vary by computing environments.",
            "title": "Overview"
        },
        {
            "location": "/installation/#definitions-used",
            "text": "For the purposes of these instructions, we'll refer to computers by their  functional  role:    Scanner computer : The computer where reconstructed images from the scanner appear. In the case of GE scanners, for instance, new slice dicom files appear in a directory on the scanner console. Siemens scanners, on the other hand, may export new images to a directory on a shared network drive. The  scanner computer  is simply the computer that has local access to the directory where new images appear    Analysis computer : The computer that will be running  Pyneal . This is the computer on which users will setup their analysis, launch  Pyneal , and monitor on-going scans.    Note that in some cases, the  same physical computer  can play both functional roles. For instance, when working in a Siemens environment, new images from the scanner might be exported to a shared directory that is accessible on the  analysis computer . In this case, the same machine could be playing the role of both the  scanner computer  and the  analysis computer .",
            "title": "Definitions Used"
        },
        {
            "location": "/installation/#download-pyneal",
            "text": "Download the  Pyneal repository  from GitHub, or clone to your local machine:   git clone https://github.com/jeffmacinnes/pyneal.git",
            "title": "Download Pyneal"
        },
        {
            "location": "/installation/#pyneal-scanner",
            "text": "The  pyneal_scanner  directory needs to be on the  scanner computer . If the  scanner computer  is different from the  analysis computer  in your environment, copy the  pyneal_scanner  directory to the  scanner computer .",
            "title": "Pyneal-Scanner"
        },
        {
            "location": "/installation/#dependencies",
            "text": "The  scanner computer  requires additional  python  libraries in order to run  Pyneal Scanner .  You can attempt to install all required libraries at once by navigating into the  pyneal_scanner  directory and typing:   pip install -r requirements.txt   If that fails for any reason, you can install manually one at a time:   pip install numpy==1.13.1 \npip install pydicom==0.9.9 \npip install nibabel==2.1.0 \npip install pyzmq==16.0.2 \npip install pyyaml==3.12   These versions reflect the primary environment in which  Pyneal  is tested. It is likely that other versions maintain compatibility, but use at your own risk.",
            "title": "dependencies"
        },
        {
            "location": "/installation/#pyneal",
            "text": "The  pyneal  directory needs to be on the  analysis computer .",
            "title": "Pyneal"
        },
        {
            "location": "/installation/#dependencies_1",
            "text": "The  analysis computer  requires additional  python  libraries in order to run  Pyneal .  You can attempt to install all required libraries at once by navigating into the  pyneal  directory and typing:   pip install -r requirements.txt   If that fails for any reason, you can install manually one at a time:   pip install numpy==1.13.1 \npip install nibabel==2.1.0 \npip install pyzmq==16.0.2 \npip install pyyaml==3.12 \npip install kivy==1.10.dev0 \npip install flask==0.12.2 \npip install flask_socketio==2.9.2 \npip install eventlet==0.21.0     These versions reflect the primary environment in which  Pyneal  is tested. It is likely that other versions maintain compatibility, but use at your own risk.",
            "title": "dependencies"
        },
        {
            "location": "/installation/#misc-utilities",
            "text": "Pyneal  itself does not require any additional libaries beyond what is listed above. However, there are various tools included that you may find useful during a real-time scan session. For instance, the tool  createMask  can be used to transform a standard space ROI mask to the subject's functional space, which can then be used as a mask for analysis during a real-time scan.   In order to use these additional tools, make sure you have installed the following:   FSL 5.0",
            "title": "Misc Utilities"
        },
        {
            "location": "/setup/",
            "text": "The set-up instructions are broken down by \nPyneal Scanner\n and \nPyneal\n. If you haven't already, follow the \ninstallation instructions\n to configure your environment, and read the section on \ndefinitions\n, as those definitions are used throughout these instructions. \n\n\nPyneal Scanner\n\n\nPyneal",
            "title": "Setup"
        },
        {
            "location": "/setup/#pyneal-scanner",
            "text": "",
            "title": "Pyneal Scanner"
        },
        {
            "location": "/setup/#pyneal",
            "text": "",
            "title": "Pyneal"
        },
        {
            "location": "/troubleshooting/",
            "text": "",
            "title": "Troubleshooting"
        }
    ]
}